[tox]
minversion = 1.6
envlist = py27
skipdist = True

[testenv]
usedevelop = True
install_command = pip install -U {opts} {packages}
setenv = VIRTUAL_ENV={envdir}
deps = -r{toxinidir}/test-requirements.txt

[testenv:docs]
commands = sphinx-build -W -b html doc/source doc/build/html

[testenv:linters]
whitelist_externals =
    {[testenv:ansible-lint]whitelist_externals}
commands =
    {[testenv:ansible-lint]commands}
setenv =
    {[testenv:ansible-lint]setenv}

# TODO(pabelanger): Replace this with linters entry point once we move to zuulv3
[testenv:ansible-lint]
commands =
    bash -c "find roles/ -type f -regex '.*.y[a]?ml' -print | xargs -L1 ansible-lint"
setenv =
    ANSIBLE_CONFIG = {toxinidir}/openshift-ansible/ansible.cfg
    PYTHONUNBUFFERED = 1
whitelist_externals = bash

[testenv:ansible-playbook]
commands =
    rm -rf {toxinidir}/openshift-ansible
    bash -c "git clone https://github.com/dmsimard/openshift-ansible; pushd openshift-ansible; git checkout rdo-3.7; popd"
    pip install -r {toxinidir}/openshift-ansible/requirements.txt
    ansible-playbook {posargs}
    rm -rf {toxinidir}/openshift-ansible
passenv =
    HOME
    SSH_AUTH_SOCK
    USER
    RDO_GITHUB_CLIENT_ID
    RDO_GITHUB_CLIENT_SECRET
setenv =
    ANSIBLE_CONFIG = {toxinidir}/openshift-ansible/ansible.cfg
    ANSIBLE_CALLBACK_PLUGINS={toxinidir}/.tox/ansible-playbook/lib/python2.7/site-packages/ara/plugins/callbacks
    PYTHONUNBUFFERED = 1
whitelist_externals =
    bash
    rm
